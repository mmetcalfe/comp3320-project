#version 330 core

in vec3 Mapcoord;

uniform samplerCube environmentMap;

uniform mat4 model;
uniform mat4 view;
uniform mat4 proj;

out vec4 outColor;

void main() {
    // face normal in eye space:
    vec3 face_normal_eye = normalize(cross(dFdx(Mapcoord), dFdy(Mapcoord)));
    mat4 inv = inverse(view * model);
    vec4 tmp = inv * vec4(face_normal_eye, 0);
    vec3 face_normal_model = normalize(tmp.xyz);
//    outColor = vec4(face_normal_model, 1.0);

    vec4 tmp_inc = inv * vec4(Mapcoord, 0);
    vec3 incident = normalize(tmp_inc.xyz);
    vec3 sampleCoord = reflect(incident, face_normal_model);
//    outColor = vec4(sampleCoord, 1.0);

    outColor = texture(environmentMap, sampleCoord);
//    outColor = vec4(normalize(Mapcoord.xyz), 1.0);
//    outColor = vec4(face_normal.xyz, 1.0);
//    outColor = vec4(normalize(dFdx(Mapcoord)), 1.0);
//    outColor = vec4(normalize(sampleCoord.xyz), 1.0);

//    outColor = texture(environmentMap, Mapcoord);
}
